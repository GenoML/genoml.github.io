(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{105:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return g}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),l=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},d=function(e){var n=l(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=l(t),m=r,g=d["".concat(a,".").concat(m)]||d[m]||p[m]||o;return t?i.a.createElement(g,c(c({ref:n},s),{},{components:t})):i.a.createElement(g,c({ref:n},s))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=m;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var s=2;s<o;s++)a[s]=t[s];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},98:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return u})),t.d(n,"default",(function(){return l}));var r=t(3),i=t(7),o=(t(0),t(105)),a={last_modified_on:"2020-12-18",id:"tuning",title:"Model tuning"},c={unversionedId:"guides/tuning",id:"guides/tuning",isDocsHomePage:!1,title:"Model tuning",description:"The most basic command to tune your model looks like the following; it looks for the file that was generated in the training step:",source:"@site/docs/guides/tuning.md",slug:"/guides/tuning",permalink:"/docs/guides/tuning",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/guides/tuning.md",version:"current",sidebar:"docs",previous:{title:"Model training",permalink:"/docs/guides/training"},next:{title:"Testing and validation",permalink:"/docs/guides/validation"}},u=[],s={toc:u};function l(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The most basic command to tune your model looks like the following; it looks for the file that was generated in the training step: "),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"# Running GenoML supervised tuning after munging and training on discrete data\n\ngenoml discrete supervised tune \\\n--prefix outputs/test_discrete_geno\n")),Object(o.b)("p",null,"If you are interested in changing the number of iterations the tuning process goes through by modifying ",Object(o.b)("inlineCode",{parentName:"p"},"--max_tune")," ",Object(o.b)("em",{parentName:"p"},"(default is 50)"),", or the number of cross-validations by modifying ",Object(o.b)("inlineCode",{parentName:"p"},"--n_cv")," ",Object(o.b)("em",{parentName:"p"},"(default is 5)"),", this is what the command would look like: "),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"# Running GenoML supervised tuning after munging and training on discrete data, modifying the number of iterations and cross-validations \n\ngenoml discrete supervised tune \\\n--prefix outputs/test_discrete_geno \\\n--max_tune 10 --n_cv 3\n")),Object(o.b)("p",null,"If you are interested in tuning on another metric other than AUC ",Object(o.b)("em",{parentName:"p"},"(default is AUC)"),", you can modify ",Object(o.b)("inlineCode",{parentName:"p"},"--metric_tune")," (options are ",Object(o.b)("inlineCode",{parentName:"p"},"AUC")," or ",Object(o.b)("inlineCode",{parentName:"p"},"Balanced_Accuracy"),") by doing the following: "),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"# Running GenoML supervised tuning after munging and training on discrete data, modifying the metric to tune by\n\ngenoml discrete supervised tune \\\n--prefix outputs/test_discrete_geno \\\n--metric_tune Balanced_Accuracy\n")),Object(o.b)("a",{id:"4"}))}l.isMDXComponent=!0}}]);